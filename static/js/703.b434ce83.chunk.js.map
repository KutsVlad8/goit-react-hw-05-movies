{"version":3,"file":"static/js/703.b434ce83.chunk.js","mappings":"kNAGaA,EAAOC,EAAAA,EAAAA,GAAH,yIAUJC,EAAWD,EAAAA,EAAAA,GAAH,oEAIRE,GAAeF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,yEAKZI,EAAQJ,EAAAA,EAAAA,GAAH,qEAKLK,EAAML,EAAAA,EAAAA,IAAH,kF,6BCEhB,EAzBmB,SAAC,GAAgB,IAAdM,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MACjB,OACE,+BACE,SAACT,EAAD,UACGO,EAAOG,KAAI,SAAAC,GAAK,OACf,SAACT,EAAD,WACE,UAACC,EAAD,CAAcS,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAxD,WACE,SAACH,EAAD,UAAQM,EAAMK,OAASL,EAAMM,QAC7B,SAACX,EAAD,CACEY,IACEP,EAAMQ,YAAN,yCACsCR,EAAMQ,aACxCC,EAENC,IAAKV,EAAMK,OAASL,EAAMM,WATjBN,EAAME,GADN,OAkBxB,C,mMCzBKS,EAAW,+BACXC,EAAU,mCAGT,SAAeC,IAAtB,+B,aAAO,O,oBAAA,yGAA8BC,EAA9B,+BAAqC,EACpCC,EADD,UACUJ,EADV,qCAC+CC,EAD/C,iBAC+DE,GAD/D,SAEQE,EAAAA,EAAAA,IACND,GACJE,MAAK,SAAAC,GACJ,OAAOA,EAASC,IACjB,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IAPT,2GAWA,SAAeG,EAAtB,kC,aAAO,O,oBAAA,WAA8BC,GAA9B,8EACCV,EADD,UACUJ,EADV,iCAC2CC,EAD3C,kBAC4Da,GAD5D,SAEQT,EAAAA,EAAAA,IACND,GACJE,MAAK,SAAAC,GACJ,OAAOA,EAASC,IACjB,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IAPT,0GAWA,SAAeK,EAAtB,kC,aAAO,O,oBAAA,WAA4BC,GAA5B,8EACCZ,EADD,UACUJ,EADV,kBAC4BgB,EAD5B,oBACgDf,GADhD,SAEQI,EAAAA,EAAAA,IACND,GACJE,MAAK,SAAAC,GACJ,OAAOA,EAASC,IACjB,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IAPT,0GAWA,SAAeO,EAAtB,kC,aAAO,O,oBAAA,WAA4BD,GAA5B,8EACCZ,EADD,UACUJ,EADV,kBAC4BgB,EAD5B,4BACwDf,GADxD,SAEQI,EAAAA,EAAAA,IACND,GACJE,MAAK,SAAAC,GACJ,OAAOA,EAASC,IACjB,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IAPT,0GAWA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA+BF,GAA/B,8EACCZ,EADD,UACUJ,EADV,kBAC4BgB,EAD5B,4BACwDf,GADxD,SAEQI,EAAAA,EAAAA,IACND,GACJE,MAAK,SAAAC,GACJ,OAAOA,EAASC,IACjB,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IAPT,0G,sKChDMS,EAAaxC,EAAAA,EAAAA,KAAH,mMAYVyC,EAAkBzC,EAAAA,EAAAA,MAAH,6VAsBf0C,EAAmB1C,EAAAA,EAAAA,OAAH,wT,SCC7B,EA9BkB,SAAC,GAAkB,IAAhB2C,EAAe,EAAfA,SACnB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOT,EAAP,KAAcU,EAAd,KAaA,OACE,+BACE,UAACL,EAAD,CAAYG,SATK,SAAAG,GACnBA,EAAMC,iBACN,IAAMC,EAAYb,EAAMc,OACxBN,EAASK,EAAUE,eACnBL,EAAS,GACV,EAIG,WACE,SAACJ,EAAD,CACEzB,KAAK,QACLmC,KAAK,OACLC,MAAOjB,EACPkB,SAlBY,SAAAP,GAClBD,EAASC,EAAMQ,OAAOF,MACvB,EAiBOG,YAAY,kBAEd,SAACb,EAAD,CAAkBS,KAAK,SAAvB,SAAgC,eAIvC,E,uCC2BD,EAvDe,WAAO,IAAD,EACnB,GAAwCP,EAAAA,EAAAA,UAAS,IAAjD,eAAOY,EAAP,KAAqBC,EAArB,KACA,GAAsCb,EAAAA,EAAAA,YAAtC,eAAOc,EAAP,KAAoBC,EAApB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAW,UAAGF,EAAaG,IAAI,iBAApB,QAAiC,GAoClD,OAtBAC,EAAAA,EAAAA,YAAU,WAAM,wCAKd,8GAEyB/B,EAAAA,EAAAA,IAAe6B,GAFxC,OAEUzD,EAFV,OAGI0B,QAAQC,IAAI3B,GACZmD,GAAgB,OAAInD,EAAO4D,UAC3BP,EAAerD,EAAO6D,eAL1B,gDAQInC,QAAQC,IAAR,MARJ,sGALc,sBACM,KAAhB8B,GADU,mCAmBdK,EACD,GAAE,CAACL,KAGF,iCACE,SAAC,EAAD,CAAWpB,SApCU,SAAA0B,GACN,KAAbA,EAGOA,IAAaN,EAKxBD,EAAgB,CAAEQ,OAAQD,IAJxBE,IAAAA,OAAAA,KAAA,wGAA2CF,EAA3C,kGAHAE,IAAAA,OAAAA,QAAwB,+FAQ3B,IA4BoB,IAAhBb,IACC,+BACE,yBAAG,gGAAmBF,EAAa,sGAItCA,IAAgB,SAACgB,EAAA,EAAD,CAAYlE,OAAQkD,MAG1C,C","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/servise/Api.jsx","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n  padding: 0;\n  margin-bottom: 5px;\n\n  list-style: none;\n`;\n\nexport const ListItem = styled.li`\n  flex-basis: calc((100% - 2 * 30px) / 3);\n`;\n\nexport const ListLinkItem = styled(Link)`\n  text-align: center;\n  text-decoration: none;\n`;\n\nexport const Title = styled.h2`\n  margin-top: 0px;\n  color: darkslategray;\n`;\n\nexport const Img = styled.img`\n  display: block;\n  width: 100%;\n  border-radius: 8px;\n`;\n","import { List, ListItem, ListLinkItem, Title, Img } from './MoviesList.styled';\nimport img from '../../images/noFoto.jpg';\nimport { useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <List>\n        {movies.map(movie => (\n          <ListItem key={movie.id}>\n            <ListLinkItem to={`/movies/${movie.id}`} state={{ from: location }}>\n              <Title>{movie.title || movie.name}</Title>\n              <Img\n                src={\n                  movie.poster_path\n                    ? `https://image.tmdb.org/t/p/w300${movie.poster_path}`\n                    : img\n                }\n                alt={movie.title || movie.name}\n              />\n            </ListLinkItem>\n          </ListItem>\n        ))}\n      </List>\n    </>\n  );\n};\n\nexport default MoviesList;\n","import axios from 'axios';\n\nconst MAIN_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '048dfb7517a31fb5a77ea118ba208738';\n\n// Отримує параметр поточної сторінки та повертає промікс фільмів що були в тренді протягом дня\nexport async function getDayTrending(page = 1) {\n  const url = `${MAIN_URL}/trending/all/day?api_key=${API_KEY}&page=${page}`;\n  return await axios\n    .get(url)\n    .then(response => {\n      return response.data;\n    })\n    .catch(error => console.log(error));\n}\n\n// Робить пошук поточного фільму\nexport async function getSearchMovie(query) {\n  const url = `${MAIN_URL}/search/movie?api_key=${API_KEY}&query=${query}`;\n  return await axios\n    .get(url)\n    .then(response => {\n      return response.data;\n    })\n    .catch(error => console.log(error));\n}\n\n// Отримує параметр поточного фільму\nexport async function getMovieInfo(movie_id) {\n  const url = `${MAIN_URL}/movie/${movie_id}?api_key=${API_KEY}`;\n  return await axios\n    .get(url)\n    .then(response => {\n      return response.data;\n    })\n    .catch(error => console.log(error));\n}\n\n// Отримує актерський состав фільму\nexport async function getMovieCast(movie_id) {\n  const url = `${MAIN_URL}/movie/${movie_id}/credits?api_key=${API_KEY}`;\n  return await axios\n    .get(url)\n    .then(response => {\n      return response.data;\n    })\n    .catch(error => console.log(error));\n}\n\n// Отримує актерський состав фільму\nexport async function getMovieReviews(movie_id) {\n  const url = `${MAIN_URL}/movie/${movie_id}/reviews?api_key=${API_KEY}`;\n  return await axios\n    .get(url)\n    .then(response => {\n      return response.data;\n    })\n    .catch(error => console.log(error));\n}\n","import styled from '@emotion/styled';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n\n  width: 100%;\n  max-width: 300px;\n  margin-top: 30px;\n  margin-bottom: 30px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n\n  margin-right: 10px;\n  font: inherit;\n  font-size: 20px;\n\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  color: darkslategray;\n\n  border: 1px solid darkslategray;\n  border-radius: 3px;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n\n  height: 28px;\n\n  background-color: white;\n  color: darkslategray;\n  border: 1px solid darkslategray;\n  border-radius: 3px;\n\n  cursor: pointer;\n  outline: none;\n\n  &:hover,\n  &:focus {\n    background-color: darkslategray;\n    color: white;\n  }\n`;\n","import { useState } from 'react';\nimport {\n  SearchForm,\n  SearchFormInput,\n  SearchFormButton,\n} from './SearchBar.styled';\n\nconst SearchBar = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const changeInput = event => {\n    setQuery(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const trimQuery = query.trim();\n    onSubmit(trimQuery.toLowerCase());\n    setQuery('');\n  };\n\n  return (\n    <>\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchFormInput\n          name=\"query\"\n          type=\"text\"\n          value={query}\n          onChange={changeInput}\n          placeholder=\"Search movie\"\n        />\n        <SearchFormButton type=\"submit\">Search</SearchFormButton>\n      </SearchForm>\n    </>\n  );\n};\n\nexport default SearchBar;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { getSearchMovie } from 'components/servise/Api';\nimport Notiflix from 'notiflix';\n\nconst Movies = () => {\n  const [searchMovies, setSearchMovies] = useState([]);\n  const [totalMovies, setTotalMovies] = useState();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('search') ?? '';\n\n  const handleSubmitForm = newQuery => {\n    if (newQuery === '') {\n      Notiflix.Notify.failure('Поле ввода пустое');\n      return;\n    } else if (newQuery === searchQuery) {\n      Notiflix.Notify.info(`Фильмы по запросу  ${newQuery} уже отображались.`);\n      return;\n    }\n\n    setSearchParams({ search: newQuery });\n  };\n\n  useEffect(() => {\n    if (searchQuery === '') {\n      return;\n    }\n\n    async function fetch() {\n      try {\n        const movies = await getSearchMovie(searchQuery);\n        console.log(movies);\n        setSearchMovies([...movies.results]);\n        setTotalMovies(movies.total_results);\n      } catch (error) {\n        // setError(error.message);\n        console.log(error);\n      } finally {\n        // setLoading(false);\n      }\n    }\n\n    fetch();\n  }, [searchQuery]);\n\n  return (\n    <>\n      <SearchBar onSubmit={handleSubmitForm}></SearchBar>\n\n      {totalMovies === 0 && (\n        <>\n          <p>По вашему запросу {searchMovies} ни чего не найдено</p>\n        </>\n      )}\n\n      {searchMovies && <MoviesList movies={searchMovies} />}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["List","styled","ListItem","ListLinkItem","Link","Title","Img","movies","location","useLocation","map","movie","to","id","state","from","title","name","src","poster_path","img","alt","MAIN_URL","API_KEY","getDayTrending","page","url","axios","then","response","data","catch","error","console","log","getSearchMovie","query","getMovieInfo","movie_id","getMovieCast","getMovieReviews","SearchForm","SearchFormInput","SearchFormButton","onSubmit","useState","setQuery","event","preventDefault","trimQuery","trim","toLowerCase","type","value","onChange","target","placeholder","searchMovies","setSearchMovies","totalMovies","setTotalMovies","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","results","total_results","fetch","newQuery","search","Notiflix","MoviesList"],"sourceRoot":""}